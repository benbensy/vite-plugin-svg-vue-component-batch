import { resolve, relative, dirname } from "node:path";
import { fileURLToPath } from "node:url";
import type { Plugin } from "vite";
import fg from "fast-glob";
import { slugify } from "transliteration";
import fs from "fs-extra";

interface Options {
  dir: string;
}

export default function svgVueComponentBatchPlugin(options: Options): Plugin {
  const virtualModuleId = "virtual:svg-components";
  const { dir } = options;
  const resolvedVirtualId = "\0" + virtualModuleId;
  let root = process.cwd();
  const pluginRoot = dirname(fileURLToPath(import.meta.url));
  let files: string[] = [];

  return {
    name: "vite-plugin-svg-vue-component-batch",
    enforce: "pre",

    configResolved(config) {
      root = config.root;
    },

    async buildStart() {
      const svgDir = resolve(root, dir);
      files = await fg("**/*.svg", { cwd: svgDir, onlyFiles: true });

      const typeMappings: string[] = [];

      for (const file of files) {
        const name = normalizeName(file);
        typeMappings.push(`'${name}': DefineComponent<SVGAttributes>;`);
      }

      const dtsPath = resolve(pluginRoot, "svg-components.d.ts");
      await generateDTS(virtualModuleId, dtsPath, typeMappings);
    },

    async resolveId(id) {
      if (id === virtualModuleId) {
        return resolvedVirtualId;
      }
    },

    async load(id) {
      if (id !== resolvedVirtualId) return;

      const svgDir = resolve(root, dir);

      const imports: string[] = [];
      const mappings: string[] = [];

      for (const file of files) {
        const name = normalizeName(file);
        const importPath =
          "/" + relative(root, resolve(svgDir, file)).replace(/\\/g, "/");
        const varName = `Icon_${name}`;

        imports.push(
          `const ${varName} = defineAsyncComponent(() => import('${importPath}?component'));`
        );
        mappings.push(`'${name}': ${varName}`);
      }

      return `import { defineAsyncComponent } from 'vue'

${imports.join("\n")}

export default {
  ${mappings.join(",\n  ")}
}
      `;
    },
  };
}

function normalizeName(file: string) {
  slugify.config({
    lowercase: true,
    separator: "_",
    allowedChars: "a-zA-Z0-9_",
    unknown: "_",
  });

  const fileName = file.replace(/\.svg$/, "");
  return slugify(fileName);
}

async function generateDTS(moduleId: string, path: string, types: string[]) {
  const content = `// Generated by vite-plugin-svg-vue-component-batch
declare module '${moduleId}' {
  import type { DefineComponent, SVGAttributes } from 'vue';
  
  const icons: {
  ${types.join("\n  ")}
}
  export default icons;
}
`;

  await fs.ensureFile(path);
  await fs.writeFile(path, content, "utf-8");
}
